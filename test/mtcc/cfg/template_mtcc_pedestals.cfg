process PEDESTALS = {

service = MessageLogger {
	untracked vstring destinations = { "insert_logpath/pedetals_insert_pedRuns.log" }
	untracked PSet pedestals_insert_pedRuns.log = { string threshold = "INFO"    
							      #PSet default = { int32 limit = -1 bool noLineBreaks = false } 
							    }
}

#service = Timing { }

es_source = SiStripFedCablingFromXml {
	string Label="Fed1"
	string XmlParsedFile="insert_fedconnection_description"
}

service = PoolDBOutputService{

	          string connect="sqlite_file:insert_SiStripPedNoisesDB" 
	untracked string catalog="file:insert_SiStripPedNoisesCatalog" 
	          string timetype = "runnumber"    
        untracked bool   loadBlobStreamer = true
  
        untracked uint32 authenticationMethod = 0
        untracked uint32 messagelevel = 3

 	VPSet toPut={
	    	{untracked string containerName = "SiStripPedestals"
             	string tag ="SiStripPedestals_v1"},
            	{untracked string containerName = "SiStripNoises"
             	string tag ="SiStripNoises_v1"}
       }	
}
	

source = TBRUInputSource
{
	untracked vstring fileNames = { insert_input_filenames }
	untracked int32 maxEvents =-1 //@@ all events
	#untracked int32 nFeds = 1 # not strictly necessary
}

module RawToDigi = SiStripRawToDigiModule 
{
	string InputModuleLabel = "source"
	untracked int32 AppendedBytes = 0
       	untracked int32 FedBufferDumpFreq = 0
       	untracked bool  UseFedKey = true #@@ also false seems to be ok
       	untracked int32 TriggerFedId = 1023
}

service = DaqMonitorROOTBackEnd {}

module DqmSource = CommissioningSourceMtcc
{
	string InputModuleLabel = "RawToDigi"
	untracked int32 HistoUpdateFreq = 100
	untracked string RootFileName = "Source"
	untracked string CommissioningTask = "PEDESTALS" //@@ not necessary (will over-ride data stream

	untracked string userEnv="me"
	untracked string passwdEnv="me"

        double cutForNoisy = 1.8                              
        double cutForDead = 0.6                            
        double cutForNonGausTails = 0.95                    
}


path p = { RawToDigi , DqmSource}
}

